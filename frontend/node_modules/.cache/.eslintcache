[{"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/index.jsx":"1","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/App.jsx":"2","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/HomePage.jsx":"3","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/errorPages/NotFound.jsx":"4","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/utils/NavBar.jsx":"5","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/utils/Footer.jsx":"6","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/CardList.jsx":"7","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/hooks/useFetch.js":"8","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/NewCourseForm.jsx":"9","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/errorPages/PageError.jsx":"10","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/loading/Loading.jsx":"11","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/loading/LoaderCard.jsx":"12","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/CourseCard.jsx":"13"},{"size":209,"mtime":1696772652470,"results":"14","hashOfConfig":"15"},{"size":807,"mtime":1696832555386,"results":"16","hashOfConfig":"15"},{"size":2661,"mtime":1698139295594,"results":"17","hashOfConfig":"15"},{"size":338,"mtime":1696772652469,"results":"18","hashOfConfig":"15"},{"size":435,"mtime":1696772652470,"results":"19","hashOfConfig":"15"},{"size":294,"mtime":1696772652470,"results":"20","hashOfConfig":"15"},{"size":1802,"mtime":1698139299665,"results":"21","hashOfConfig":"15"},{"size":3871,"mtime":1698139113435,"results":"22","hashOfConfig":"15"},{"size":1887,"mtime":1698139385874,"results":"23","hashOfConfig":"15"},{"size":408,"mtime":1696772652469,"results":"24","hashOfConfig":"15"},{"size":744,"mtime":1696772652470,"results":"25","hashOfConfig":"15"},{"size":1362,"mtime":1696772652470,"results":"26","hashOfConfig":"15"},{"size":7759,"mtime":1698139245694,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"68gmri",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/index.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/App.jsx",["70"],[],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport NavBar from './components/utils/NavBar';\nimport Footer from './components/utils/Footer';\nimport HomePage from './components/HomePage';\nimport NotFound from './components/errorPages/NotFound';\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <div className=\"d-flex flex-column\" style={{ minHeight: '90vh', background: '#313131', paddingTop: '10vh' }}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </BrowserRouter>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/HomePage.jsx",["71"],[],"import React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PageError from './errorPages/PageError';\nimport Loading from './loading/Loading';\nimport useFetch from '../hooks/useFetch';\nimport CardList from './CardList';\nimport NewCourseForm from './NewCourseForm';\n\nexport default function HomePage() {\n  const [field, setField] = useState('allCourses');\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [id, setId] = useState('');\n\n  const queryParams = {\n    id: `${id}`,\n    CourseName: `${title}`,\n    CourseURL:  `${url}`,\n    ImageURL: `${imgUrl}`,\n  };\n\n  // Initializing API Call with a useFetch function\n  const {\n    data: courseData,\n    success: callSuccess,\n    loading: callLoading,\n  } = useFetch(\n    field,\n    JSON.stringify(queryParams),\n  );\n\n  console.log(callLoading)\n\n  // Function to re-update GraphQL query parameters fetch list of courses\n  // when either a course had been added, edited, or deleted\n  useEffect(() => {\n    if (!callLoading && field !== 'allCourses') {\n      setField('allCourses');\n      setTitle('');\n      setUrl('');\n      setImgUrl('');\n      setId('');\n    }\n  }, [callLoading]);\n\n  if (callLoading) {\n    return (\n      <Loading />\n    );\n  }\n\n  if (!(callSuccess)) {\n    if (!courseData.success) {\n      console.error(`The following errors were encountered:\\nError -> ${courseData.error}\\n`);\n      return (\n        <PageError errorMessage={`The following errors were encountered:\\nError -> ${courseData.error}\\n`} />\n      );\n    }\n    return (\n      <PageError errorMessage=\"Oops! Something went wrong\" />\n    );\n  }\n\n\n\n  return (\n    <Container>\n      <Col className=\"align-items-center\">\n        <Row style={{ paddingTop: '10px' }}>\n          <h1 className=\"header1-design\">Educative Courses List</h1>\n        </Row>\n        <Row style={{ paddingTop: '20px', paddingBottom: '20px' }}>\n          <CardList data={courseData} type=\"course\" setField={setField} setTitle={setTitle} setUrl={setUrl} setImgUrl={setImgUrl} setId={setId} />\n        </Row>\n        <hr style={{ color: '#ffffff' }} />\n        <Row style={{ paddingTop: '10px' }}>\n          <h1 className=\"header1-design\">Add a Course</h1>\n        </Row>\n        <Row style={{ paddingTop: '20px' }}>\n          <NewCourseForm\n            setField={setField}\n            setTitle={setTitle}\n            setUrl={setUrl}\n            setImgUrl={setImgUrl}\n            setId={setId}\n          />\n        </Row>\n      </Col>\n    </Container>\n  );\n}","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/errorPages/NotFound.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/utils/NavBar.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/utils/Footer.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/CardList.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/hooks/useFetch.js",["72","73","74","75"],[],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useFetch(queryField, queryAttributesStr) {\n  // Declaring the essential state variables for data and checking\n  // if the request is loading or succeeded\n  const [data, setData] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const controller = new AbortController();\n\n  useEffect(() => {\n    // Changing loading and success state to true whenever there's an effect\n    setLoading(true);\n    setSuccess(false);\n\n    // Extracting data from queryAttributesStr\n    const queryAttributes = JSON.parse(queryAttributesStr);\n    const options = { headers: \n        {\n            'content-type': 'text/plain'\n        }}\n\n    function CRUDOperations(requestField, inputData, signal){\n        if (requestField === 'addCourse'){\n            axios.post(`http://localhost/api/addcourse`, inputData, options,  { signal }).\n            then(response => {\n                console.log(response)\n                if (response.status !== 200) {\n                    alert(\"Server Error: Course creation failed.\");\n                }\n                })\n                .catch(error => {\n                    console.error(\"Network Error:\", error);\n                    alert(\"Network Error: Course creation failed.\");\n                });\n        }\n        if (requestField === 'editCourse'){\n            axios.put(`http://localhost/api/updatecourse`, inputData, options, { signal }).\n            then(response => {\n                if (response.status !== 200) {\n                    alert(\"Server Error: Course updation failed.\");\n                }\n                })\n                .catch(error => {\n                    console.error(\"Network Error:\", error);\n                    alert(\"Network Error: Course updation failed.\");\n                });\n        }\n        \n        if (requestField === 'removeCourse'){\n\n            axios.delete(`http://localhost/api/deletecourse?id=${inputData.id}`, options, { signal }).\n            then(response => {\n                console.log(response)\n            if (response.status !== 200) {\n                alert(\"Server Error: Course deletion failed.\");\n            }\n            })\n            .catch(error => {\n                console.error(\"Network Error:\", error);\n            });\n        }\n    }\n\n    // asynchronous function to make API call\n    async function fetchData() {\n      try {\n        const signal = controller.signal;\n\n        if (queryField !== \"allCourses\"){\n            await CRUDOperations(queryField, queryAttributes, signal)\n        }\n        \n        const response = await axios.get('http://localhost/api/getcourses', { signal });\n\n        // Checking if the request was a success\n        if (response.status === 200) {\n          setSuccess(true);\n          setData(response); // Storing response data\n        } else {\n          const errorMessage = response.data.errorMessage || response.data.statusText;\n          throw new Error(`Status Code: ${response.status}\\nError Message: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error(error.message);\n        setData({ error: error.message });\n        setSuccess(false);\n      } finally {\n        // Changing loading state to false whenever the API request ends in success or failure\n        setLoading(false);\n      }\n    }\n\n    // Making sure that a null field is not passed\n    if (queryField) {\n      fetchData();\n    } else {\n      setLoading(false);\n      setSuccess(true);\n    }\n\n    // Cancelling the fetch request in case the user navigates\n    // away from the screen\n    return () => {\n      controller.abort();\n    };\n\n    // Defining variables that trigger useFetch\n  }, [queryField, queryAttributesStr]);\n\n  // Returning useFetch response\n  return { data, success, loading };\n}","/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/NewCourseForm.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/errorPages/PageError.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/loading/Loading.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/loading/LoaderCard.jsx",[],[],"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/components/CourseCard.jsx",[],[],{"ruleId":"76","severity":1,"message":"77","line":8,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":11},{"ruleId":"80","severity":1,"message":"81","line":47,"column":6,"nodeType":"82","endLine":47,"endColumn":19,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":27,"column":90,"nodeType":"86","messageId":"87","endLine":27,"endColumn":91,"fix":"88"},{"ruleId":"84","severity":1,"message":"85","line":40,"column":91,"nodeType":"86","messageId":"87","endLine":40,"endColumn":92,"fix":"89"},{"ruleId":"84","severity":1,"message":"85","line":54,"column":102,"nodeType":"86","messageId":"87","endLine":54,"endColumn":103,"fix":"90"},{"ruleId":"80","severity":1,"message":"91","line":111,"column":6,"nodeType":"82","endLine":111,"endColumn":38,"suggestions":"92"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'field'. Either include it or remove the dependency array.","ArrayExpression",["93"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"94","text":"95"},{"range":"96","text":"95"},{"range":"97","text":"95"},"React Hook useEffect has a missing dependency: 'controller'. Either include it or remove the dependency array.",["98"],{"desc":"99","fix":"100"},[975,989],"\n            .",[1525,1539],[2060,2074],{"desc":"101","fix":"102"},"Update the dependencies array to be: [callLoading, field]",{"range":"103","text":"104"},"Update the dependencies array to be: [queryField, queryAttributesStr, controller]",{"range":"105","text":"106"},[1323,1336],"[callLoading, field]",[3764,3796],"[queryField, queryAttributesStr, controller]"]