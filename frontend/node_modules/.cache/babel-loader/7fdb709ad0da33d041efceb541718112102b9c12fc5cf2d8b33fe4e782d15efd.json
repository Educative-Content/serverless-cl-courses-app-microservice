{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import axios from'axios';export default function useFetch(queryField,queryAttributesStr){// Declaring the essential state variables for data and checking\n// if the request is loading or succeeded\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),success=_useState4[0],setSuccess=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var controller=new AbortController();axios.defaults.baseURL='https://ivayzjgxfd.execute-api.us-east-1.amazonaws.com';useEffect(function(){// Changing loading and success state to true whenever there's an effect\nsetLoading(true);setSuccess(false);// Extracting data from queryAttributesStr\nvar queryAttributes=JSON.parse(queryAttributesStr);var options={headers:{\"content-type\":\"text/plain\"}};function CRUDOperations(requestField,inputData,signal){if(requestField==='addCourse'){var id=Math.floor(Math.random()*(999999-100+1)+100);var params={id:id,CourseName:inputData.CourseName,CourseURL:inputData.CourseURL,ImageURL:inputData.ImageURL};axios.post(\"/ClabCreateFunction\",options,{params:params},{signal:signal}).then(function(response){console.log(response);if(response.status!==200){alert(\"Server Error: Course creation failed.\");}}).catch(function(error){console.error(\"Network Error:\",error);alert(\"Network Error: Course creation failed.\");});}if(requestField==='editCourse'){var _params={id:inputData.id,CourseName:inputData.CourseName,CourseURL:inputData.CourseURL,ImageURL:inputData.ImageURL};axios.put(\"/ClabUpdateFunction/\".concat(inputData.id),options,{params:_params},inputData,{signal:signal}).then(function(response){console.log(response);if(response.status!==200){alert(\"Server Error: Course updation failed.\");}}).catch(function(error){console.error(\"Network Error:\",error);alert(\"Network Error: Course updation failed.\");});}if(requestField==='removeCourse'){axios.delete(\"/ClabDeleteFunction/\".concat(inputData.id),options,{signal:signal}).then(function(response){console.log(response);if(response.status!==200){alert(\"Server Error: Course deletion failed.\");}}).catch(function(error){console.error(\"Network Error:\",error);});}}// asynchronous function to make API call\nfunction fetchData(){return _fetchData.apply(this,arguments);}// Making sure that a null field is not passed\nfunction _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var signal,response,errorMessage;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;signal=controller.signal;if(!(queryField!==\"allCourses\")){_context.next=5;break;}_context.next=5;return CRUDOperations(queryField,queryAttributes,signal);case 5:_context.next=7;return axios.get('/ClabReadFunction',options,{signal:signal});case 7:response=_context.sent;console.log(response);// Checking if the request was a success\nif(!(response.status===200)){_context.next=14;break;}setSuccess(true);setData(response);// Storing response data\n_context.next=16;break;case 14:errorMessage=response.data.errorMessage||response.data.statusText;throw new Error(\"Status Code: \".concat(response.status,\"\\nError Message: \").concat(errorMessage));case 16:_context.next=23;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);setData({error:_context.t0.message});setSuccess(false);case 23:_context.prev=23;// Changing loading state to false whenever the API request ends in success or failure\nsetLoading(false);return _context.finish(23);case 26:case\"end\":return _context.stop();}},_callee,null,[[0,18,23,26]]);}));return _fetchData.apply(this,arguments);}if(queryField){fetchData();}else{setLoading(false);setSuccess(true);}// Cancelling the fetch request in case the user navigates\n// away from the screen\nreturn function(){controller.abort();};// Defining variables that trigger useFetch\n},[queryField,queryAttributesStr]);// Returning useFetch response\nreturn{data:data,success:success,loading:loading};}","map":{"version":3,"names":["useState","useEffect","axios","useFetch","queryField","queryAttributesStr","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","success","setSuccess","_useState5","_useState6","loading","setLoading","controller","AbortController","defaults","baseURL","queryAttributes","JSON","parse","options","headers","CRUDOperations","requestField","inputData","signal","id","Math","floor","random","params","CourseName","CourseURL","ImageURL","post","then","response","console","log","status","alert","catch","error","put","concat","delete","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","errorMessage","wrap","_callee$","_context","prev","next","get","sent","statusText","Error","t0","message","finish","stop","abort"],"sources":["/Users/Zainab/Desktop/MicroservicesLab/CRUDCourses/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function useFetch(queryField, queryAttributesStr) {\n  // Declaring the essential state variables for data and checking\n  // if the request is loading or succeeded\n  const [data, setData] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const controller = new AbortController();\n\n  axios.defaults.baseURL  = 'https://ivayzjgxfd.execute-api.us-east-1.amazonaws.com'\n\n  useEffect(() => {\n    // Changing loading and success state to true whenever there's an effect\n    setLoading(true);\n    setSuccess(false);\n    // Extracting data from queryAttributesStr\n    const queryAttributes = JSON.parse(queryAttributesStr);\n    const options = { headers:\n        {\n          \"content-type\": \"text/plain\"\n        }}\n    function CRUDOperations(requestField, inputData, signal){\n        if (requestField === 'addCourse'){\n            const id = Math.floor(Math.random() * (999999 - 100 + 1) + 100);\n            const params = {\n              id : id,\n              CourseName : inputData.CourseName,\n              CourseURL : inputData.CourseURL,\n              ImageURL : inputData.ImageURL\n            }\n            axios.post(`/ClabCreateFunction`, options, {params: params}, { signal }).\n            then(response => {\n                console.log(response)\n                if (response.status !== 200) {\n                    alert(\"Server Error: Course creation failed.\");\n                }\n                })\n                .catch(error => {\n                    console.error(\"Network Error:\", error);\n                    alert(\"Network Error: Course creation failed.\");\n                });\n        }\n        if (requestField === 'editCourse'){\n          const params = {\n            id : inputData.id,\n            CourseName : inputData.CourseName,\n            CourseURL : inputData.CourseURL,\n            ImageURL : inputData.ImageURL\n          }\n            axios.put(`/ClabUpdateFunction/${inputData.id}`, options, {params: params}, inputData, { signal }).\n            then(response => {\n              console.log(response)\n                if (response.status !== 200) {\n                    alert(\"Server Error: Course updation failed.\");\n                }\n                })\n                .catch(error => {\n                    console.error(\"Network Error:\", error);\n                    alert(\"Network Error: Course updation failed.\");\n                });\n        }\n        if (requestField === 'removeCourse'){\n            axios.delete(`/ClabDeleteFunction/${inputData.id}`, options, { signal }).\n            then(response => {\n                console.log(response)\n            if (response.status !== 200) {\n                alert(\"Server Error: Course deletion failed.\");\n            }\n            })\n            .catch(error => {\n                console.error(\"Network Error:\", error);\n            });\n        }\n    }\n    // asynchronous function to make API call\n    async function fetchData() {\n      try {\n        const signal = controller.signal;\n        if (queryField !== \"allCourses\"){\n            await CRUDOperations(queryField, queryAttributes, signal)\n        }\n        const response = await axios.get('/ClabReadFunction', options, { signal });\n        console.log(response)\n        // Checking if the request was a success\n        if (response.status === 200) {\n          setSuccess(true);\n          setData(response); // Storing response data\n        } else {\n          const errorMessage = response.data.errorMessage || response.data.statusText;\n          throw new Error(`Status Code: ${response.status}\\nError Message: ${errorMessage}`);\n        }\n      } catch (error) {\n        console.error(error.message);\n        setData({ error: error.message });\n        setSuccess(false);\n      } finally {\n        // Changing loading state to false whenever the API request ends in success or failure\n        setLoading(false);\n      }\n    }\n    // Making sure that a null field is not passed\n    if (queryField) {\n      fetchData();\n    } else {\n      setLoading(false);\n      setSuccess(true);\n    }\n    // Cancelling the fetch request in case the user navigates\n    // away from the screen\n    return () => {\n      controller.abort();\n    };\n    // Defining variables that trigger useFetch\n  }, [queryField, queryAttributesStr]);\n  // Returning useFetch response\n  return { data, success, loading };\n}"],"mappings":"mcAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,cAAe,SAAS,CAAAC,QAAQA,CAACC,UAAU,CAAEC,kBAAkB,CAAE,CAC/D;AACA;AACA,IAAAC,SAAA,CAAwBN,QAAQ,CAAC,IAAI,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA8BX,QAAQ,CAAC,KAAK,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAA8Bf,QAAQ,CAAC,IAAI,CAAC,CAAAgB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAArCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,GAAM,CAAAG,UAAU,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CAExClB,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAAI,wDAAwD,CAElFrB,SAAS,CAAC,UAAM,CACd;AACAiB,UAAU,CAAC,IAAI,CAAC,CAChBJ,UAAU,CAAC,KAAK,CAAC,CACjB;AACA,GAAM,CAAAS,eAAe,CAAGC,IAAI,CAACC,KAAK,CAACpB,kBAAkB,CAAC,CACtD,GAAM,CAAAqB,OAAO,CAAG,CAAEC,OAAO,CACrB,CACE,cAAc,CAAE,YAClB,CAAC,CAAC,CACN,QAAS,CAAAC,cAAcA,CAACC,YAAY,CAAEC,SAAS,CAAEC,MAAM,CAAC,CACpD,GAAIF,YAAY,GAAK,WAAW,CAAC,CAC7B,GAAM,CAAAG,EAAE,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAI,MAAM,CAAG,GAAG,CAAG,CAAC,CAAC,CAAG,GAAG,CAAC,CAC/D,GAAM,CAAAC,MAAM,CAAG,CACbJ,EAAE,CAAGA,EAAE,CACPK,UAAU,CAAGP,SAAS,CAACO,UAAU,CACjCC,SAAS,CAAGR,SAAS,CAACQ,SAAS,CAC/BC,QAAQ,CAAGT,SAAS,CAACS,QACvB,CAAC,CACDrC,KAAK,CAACsC,IAAI,uBAAwBd,OAAO,CAAE,CAACU,MAAM,CAAEA,MAAM,CAAC,CAAE,CAAEL,MAAM,CAANA,MAAO,CAAC,CAAC,CACxEU,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACbC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrB,GAAIA,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAE,CACzBC,KAAK,CAAC,uCAAuC,CAAC,CAClD,CACA,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCF,KAAK,CAAC,wCAAwC,CAAC,CACnD,CAAC,CAAC,CACV,CACA,GAAIjB,YAAY,GAAK,YAAY,CAAC,CAChC,GAAM,CAAAO,OAAM,CAAG,CACbJ,EAAE,CAAGF,SAAS,CAACE,EAAE,CACjBK,UAAU,CAAGP,SAAS,CAACO,UAAU,CACjCC,SAAS,CAAGR,SAAS,CAACQ,SAAS,CAC/BC,QAAQ,CAAGT,SAAS,CAACS,QACvB,CAAC,CACCrC,KAAK,CAAC+C,GAAG,wBAAAC,MAAA,CAAwBpB,SAAS,CAACE,EAAE,EAAIN,OAAO,CAAE,CAACU,MAAM,CAAEA,OAAM,CAAC,CAAEN,SAAS,CAAE,CAAEC,MAAM,CAANA,MAAO,CAAC,CAAC,CAClGU,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACfC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACnB,GAAIA,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAE,CACzBC,KAAK,CAAC,uCAAuC,CAAC,CAClD,CACA,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCF,KAAK,CAAC,wCAAwC,CAAC,CACnD,CAAC,CAAC,CACV,CACA,GAAIjB,YAAY,GAAK,cAAc,CAAC,CAChC3B,KAAK,CAACiD,MAAM,wBAAAD,MAAA,CAAwBpB,SAAS,CAACE,EAAE,EAAIN,OAAO,CAAE,CAAEK,MAAM,CAANA,MAAO,CAAC,CAAC,CACxEU,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACbC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACzB,GAAIA,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAE,CACzBC,KAAK,CAAC,uCAAuC,CAAC,CAClD,CACA,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CAC1C,CAAC,CAAC,CACN,CACJ,CACA;AAAA,QACe,CAAAI,SAASA,CAAA,SAAAC,UAAA,CAAAC,KAAA,MAAAC,SAAA,GAyBxB;AAAA,SAAAF,WAAA,EAAAA,UAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAzBA,SAAAC,QAAA,MAAA5B,MAAA,CAAAW,QAAA,CAAAkB,YAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAEUjC,MAAM,CAAGZ,UAAU,CAACY,MAAM,MAC5B3B,UAAU,GAAK,YAAY,GAAA2D,QAAA,CAAAE,IAAA,UAAAF,QAAA,CAAAE,IAAA,SACrB,CAAArC,cAAc,CAACxB,UAAU,CAAEmB,eAAe,CAAEQ,MAAM,CAAC,QAAAgC,QAAA,CAAAE,IAAA,SAEtC,CAAA/D,KAAK,CAACgE,GAAG,CAAC,mBAAmB,CAAExC,OAAO,CAAE,CAAEK,MAAM,CAANA,MAAO,CAAC,CAAC,QAApEW,QAAQ,CAAAqB,QAAA,CAAAI,IAAA,CACdxB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrB;AAAA,KACIA,QAAQ,CAACG,MAAM,GAAK,GAAG,GAAAkB,QAAA,CAAAE,IAAA,WACzBnD,UAAU,CAAC,IAAI,CAAC,CAChBJ,OAAO,CAACgC,QAAQ,CAAC,CAAE;AAAAqB,QAAA,CAAAE,IAAA,kBAEbL,YAAY,CAAGlB,QAAQ,CAACjC,IAAI,CAACmD,YAAY,EAAIlB,QAAQ,CAACjC,IAAI,CAAC2D,UAAU,MACrE,IAAI,CAAAC,KAAK,iBAAAnB,MAAA,CAAiBR,QAAQ,CAACG,MAAM,sBAAAK,MAAA,CAAoBU,YAAY,CAAE,CAAC,SAAAG,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAO,EAAA,CAAAP,QAAA,aAGpFpB,OAAO,CAACK,KAAK,CAACe,QAAA,CAAAO,EAAA,CAAMC,OAAO,CAAC,CAC5B7D,OAAO,CAAC,CAAEsC,KAAK,CAAEe,QAAA,CAAAO,EAAA,CAAMC,OAAQ,CAAC,CAAC,CACjCzD,UAAU,CAAC,KAAK,CAAC,CAAC,QAAAiD,QAAA,CAAAC,IAAA,IAElB;AACA9C,UAAU,CAAC,KAAK,CAAC,CAAC,OAAA6C,QAAA,CAAAS,MAAA,8BAAAT,QAAA,CAAAU,IAAA,MAAAd,OAAA,uBAErB,UAAAN,UAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,GAAInD,UAAU,CAAE,CACdgD,SAAS,CAAC,CAAC,CACb,CAAC,IAAM,CACLlC,UAAU,CAAC,KAAK,CAAC,CACjBJ,UAAU,CAAC,IAAI,CAAC,CAClB,CACA;AACA;AACA,MAAO,WAAM,CACXK,UAAU,CAACuD,KAAK,CAAC,CAAC,CACpB,CAAC,CACD;AACF,CAAC,CAAE,CAACtE,UAAU,CAAEC,kBAAkB,CAAC,CAAC,CACpC;AACA,MAAO,CAAEI,IAAI,CAAJA,IAAI,CAAEI,OAAO,CAAPA,OAAO,CAAEI,OAAO,CAAPA,OAAQ,CAAC,CACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}